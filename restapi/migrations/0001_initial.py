# Generated by Django 3.1.7 on 2021-05-24 16:59

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(blank=True, default='', max_length=128)),
                ('address', models.CharField(blank=True, default='', max_length=256)),
                ('pp', models.URLField(blank=True, null=True, verbose_name='profile_photo')),
                ('width_field', models.IntegerField(default=0)),
                ('height_field', models.IntegerField(default=0)),
                ('notice_offer', models.TextField(blank=True, default='')),
                ('about_me', models.TextField(blank=True, default=' ')),
                ('activation_code', models.CharField(blank=True, max_length=32, null=True)),
                ('pass_change_code', models.CharField(blank=True, max_length=32, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'account',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AlbumCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, default='', max_length=128)),
                ('quantities', models.CharField(blank=True, default='', max_length=512)),
                ('subtotal', models.FloatField(blank=True, default=0.0)),
                ('total', models.FloatField(blank=True, default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ClientCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.FloatField(blank=True, default=0.0)),
                ('key', models.CharField(blank=True, default='', max_length=100)),
                ('used', models.BooleanField(blank=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('photo', models.URLField(blank=True, null=True)),
                ('key', models.CharField(blank=True, default='', max_length=128)),
                ('price', models.FloatField(blank=True, default=0.0)),
                ('ratio', models.CharField(default='1:1', max_length=50)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('ordered_in_restaurant', models.IntegerField(blank=True, default=0)),
                ('ordered_in_home', models.IntegerField(blank=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(blank=True, default=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderNumber', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('customername', models.CharField(default='', max_length=70)),
                ('payment', models.DecimalField(decimal_places=2, max_digits=8)),
                ('totalamt', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField(blank=True, null=True)),
                ('checked', models.BooleanField(default=False)),
                ('customerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.customercategory')),
                ('empNum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.employeecategory')),
            ],
        ),
        migrations.CreateModel(
            name='OrderCatgory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catname', models.CharField(max_length=64)),
                ('desc', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerRestaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_sell_count', models.IntegerField(blank=True, default=0)),
                ('rest_sell_count', models.IntegerField(blank=True, default=0)),
                ('total_sell_tk', models.FloatField(blank=True, default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='eService', max_length=50)),
                ('image', models.URLField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=12, null=True)),
                ('email', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('city', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('state', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('zipcode', models.CharField(blank=True, default='', max_length=12, null=True)),
                ('logo', models.URLField(blank=True, null=True)),
                ('profile', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('desc', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('phone', models.CharField(max_length=128)),
                ('email', models.CharField(blank=True, default='', max_length=252, null=True)),
                ('min_serve_time', models.IntegerField(default=30, verbose_name='Minimum Serve Time')),
                ('min_order_tk', models.FloatField(default=150.0, verbose_name='Minimum Order')),
                ('service_charge', models.FloatField(default=30.0, verbose_name='Service Charge')),
                ('vat_tax', models.FloatField(blank=True, default=0.0, verbose_name='Vat/Tax')),
                ('address', models.CharField(max_length=1024)),
                ('environment', models.CharField(max_length=512)),
                ('map_embed_url', models.TextField(default='https://maps.google.com/')),
                ('logo', models.URLField(blank=True, null=True)),
                ('logo_height_field', models.IntegerField(default=0)),
                ('logo_width_field', models.IntegerField(default=0)),
                ('pp', models.URLField(blank=True, null=True)),
                ('pp_height_field', models.IntegerField(default=0)),
                ('pp_width_field', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('is_orderable', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extra_info', models.TextField(blank=True, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.city')),
                ('food_items', models.ManyToManyField(blank=True, to='restapi.Food')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_category', models.CharField(default='', max_length=50)),
                ('phone', models.CharField(blank=True, default='', max_length=12, null=True)),
                ('email', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('city', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('state', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('zipcode', models.CharField(blank=True, default='', max_length=12, null=True)),
                ('logo', models.URLField(blank=True, null=True)),
                ('profile', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('desc', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='TutorialCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.URLField(blank=True, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tutorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=70)),
                ('description', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('tutorial_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.tutorialcategory')),
            ],
        ),
        migrations.CreateModel(
            name='TaskList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('created', models.DateField(default='2021-05-24')),
                ('due_date', models.DateField(default='2021-05-24')),
                ('scheduled_date', models.DateField(default='2021-05-24')),
                ('charge', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('payment', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('note', models.CharField(default='Hello', max_length=500)),
                ('completed', models.BooleanField(default=False)),
                ('task_category', models.ForeignKey(default='general', on_delete=django.db.models.deletion.PROTECT, to='restapi.taskcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_at', models.TimeField(blank=True, default='08:00:00')),
                ('close_at', models.TimeField(blank=True, default='20:00:00')),
                ('saturday', models.BooleanField(blank=True, default=True)),
                ('sunday', models.BooleanField(blank=True, default=True)),
                ('monday', models.BooleanField(blank=True, default=True)),
                ('tuesday', models.BooleanField(blank=True, default=True)),
                ('wednesday', models.BooleanField(blank=True, default=True)),
                ('thursday', models.BooleanField(blank=True, default=True)),
                ('friday', models.BooleanField(blank=True, default=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Sell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.FloatField(default=0.0)),
                ('delivery_type', models.CharField(max_length=100)),
                ('destination', models.CharField(blank=True, default='', max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('foods', models.ManyToManyField(to='restapi.Food')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.partnerrestaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=160)),
                ('content', models.TextField()),
                ('food', models.IntegerField(default=0)),
                ('price', models.IntegerField(default=0)),
                ('service', models.IntegerField(default=0)),
                ('environment', models.IntegerField(default=0)),
                ('average', models.FloatField(default=0.0)),
                ('star1', models.CharField(default='fa-star', max_length=50)),
                ('star2', models.CharField(default='fa-star', max_length=50)),
                ('star3', models.CharField(default='fa-star', max_length=50)),
                ('star4', models.CharField(default='fa-star', max_length=50)),
                ('star5', models.CharField(default='fa-star', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food', models.FloatField(blank=True, default=0.0)),
                ('price', models.FloatField(blank=True, default=0.0)),
                ('service', models.FloatField(blank=True, default=0.0)),
                ('environment', models.FloatField(blank=True, default=0.0)),
                ('reviewed_people_no', models.IntegerField(blank=True, default=0)),
                ('average', models.FloatField(blank=True, default=0.0)),
                ('status', models.CharField(blank=True, default='N/A', max_length=50, null=True)),
                ('star1', models.CharField(default='fa-star-o text-secondary', max_length=50)),
                ('star2', models.CharField(default='fa-star-o text-secondary', max_length=50)),
                ('star3', models.CharField(default='fa-star-o text-secondary', max_length=50)),
                ('star4', models.CharField(default='fa-star-o text-secondary', max_length=50)),
                ('star5', models.CharField(default='fa-star-o text-secondary', max_length=50)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.restaurant')),
            ],
        ),
        migrations.AddField(
            model_name='restaurant',
            name='restaurant_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='restapi.restaurantcategory'),
        ),
        migrations.CreateModel(
            name='ProductList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list', models.CharField(max_length=64)),
                ('desc', models.TextField()),
                ('amt', models.DecimalField(decimal_places=2, max_digits=8)),
                ('image', models.URLField(blank=True, null=True)),
                ('checked', models.BooleanField(default=False)),
                ('sold', models.BooleanField(default=False)),
                ('instock', models.BooleanField(default=False)),
                ('category_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.productcategory')),
            ],
        ),
        migrations.AddField(
            model_name='partnerrestaurant',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.restaurant'),
        ),
        migrations.CreateModel(
            name='OrderRest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, default='', max_length=256)),
                ('order_no', models.CharField(blank=True, default='', max_length=256)),
                ('name', models.CharField(default='', max_length=100)),
                ('phone', models.CharField(default='', max_length=20)),
                ('shipping_address', models.CharField(default='', max_length=200)),
                ('status', models.BooleanField(blank=True, default=False)),
                ('payment_status', models.BooleanField(blank=True, null=True)),
                ('shipping_charge', models.FloatField(blank=True, default=30.0)),
                ('order_type', models.CharField(choices=[('home', 'Home'), ('hestaurant', 'Restaurant')], default='home', max_length=100)),
                ('payment_method', models.CharField(choices=[('pod', 'Pay On Delivery'), ('bkash', 'bKash'), ('dbbl', 'DBBL')], default='pod', max_length=100)),
                ('expected_time', models.TimeField(blank=True, default='', null=True)),
                ('discount', models.FloatField(blank=True, default=0.0)),
                ('cost', models.FloatField(blank=True, default=0.0)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='restapi.cart')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.URLField(blank=True, null=True)),
                ('item', models.CharField(default='', max_length=70)),
                ('author', models.CharField(default='', max_length=70)),
                ('description', models.TextField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('orderMasterId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.order')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=200)),
                ('content', models.TextField(blank=True, default='')),
                ('link', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_seen', models.BooleanField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='food',
            name='food_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.foodcategory'),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contatct_id', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('age', models.IntegerField(blank=True, default=0, null=True)),
                ('profile', models.URLField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_home', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_work', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zipcode', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('desc', models.TextField(blank=True, default=' ')),
                ('addition_info_01', models.CharField(blank=True, max_length=50, null=True)),
                ('addition_info_02', models.CharField(blank=True, max_length=50, null=True)),
                ('addition_info_03', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('employee_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.employeecategory')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contatct_id', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('age', models.IntegerField(blank=True, default=0, null=True)),
                ('profile', models.URLField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_home', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_work', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zipcode', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('desc', models.TextField(blank=True, default=' ')),
                ('addition_info_01', models.CharField(blank=True, max_length=50, null=True)),
                ('addition_info_02', models.CharField(blank=True, max_length=50, null=True)),
                ('addition_info_03', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('customer_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.customercategory')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contatct_id', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('age', models.IntegerField(blank=True, default=0, null=True)),
                ('profile', models.URLField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_home', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_work', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zipcode', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('addition_info_01', models.CharField(blank=True, max_length=50, null=True)),
                ('addition_info_02', models.CharField(blank=True, max_length=50, null=True)),
                ('addition_info_03', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('contact_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.contactcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ClientList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contatct_id', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('age', models.IntegerField(blank=True, default=0, null=True)),
                ('profile', models.URLField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_home', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_work', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zipcode', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('addition_info_01', models.TextField(blank=True)),
                ('addition_info_02', models.TextField(blank=True)),
                ('addition_info_03', models.TextField(blank=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('client_name', models.ForeignKey(default='general', on_delete=django.db.models.deletion.PROTECT, to='restapi.clientcategory')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='division',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.division'),
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(blank=True, to='restapi.Food'),
        ),
        migrations.AddField(
            model_name='cart',
            name='restaurant',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='restapi.restaurant'),
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.URLField(blank=True, null=True)),
                ('title', models.CharField(default='', max_length=70)),
                ('author', models.CharField(default='', max_length=70)),
                ('description', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True)),
                ('published', models.BooleanField(default=False)),
                ('book_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restapi.bookcategory')),
            ],
        ),
        migrations.CreateModel(
            name='AlbumList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('desc', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('created', models.DateField(default='2021-05-24')),
                ('note', models.CharField(default='Hello', max_length=500)),
                ('completed', models.BooleanField(blank=True, default=False, null=True)),
                ('album_category', models.ForeignKey(default='general', on_delete=django.db.models.deletion.PROTECT, to='restapi.taskcategory')),
            ],
        ),
    ]
